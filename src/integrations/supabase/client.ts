
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://bjhpsgnovsumyvkrglgz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJqaHBzZ25vdnN1bXl2a3JnbGd6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA4NDc3NjAsImV4cCI6MjA1NjQyMzc2MH0.npoPPpae7MdpP_kKl37Mec7rnBkSsb7zUVYcIHh_4ZY";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Check if the memories bucket exists, create it if it doesn't
(async () => {
  try {
    const { data: buckets } = await supabase.storage.listBuckets();
    const bucketExists = buckets?.some(bucket => bucket.name === 'memories');
    
    if (!bucketExists) {
      console.log("Creating 'memories' bucket as it doesn't exist");
      const { error } = await supabase.storage.createBucket('memories', {
        public: true
      });
      
      if (error) {
        console.error("Error creating memories bucket:", error);
      } else {
        console.log("Successfully created 'memories' bucket");
        
        // Add public access policy to the bucket
        const { error: policyError } = await supabase.rpc('create_bucket_policy', {
          bucket_name: 'memories',
          policy_name: 'Public Access',
          definition: "bucket_id = 'memories'"
        });
        
        if (policyError) {
          console.error("Error setting public policy:", policyError);
        }
      }
    }
  } catch (error) {
    console.error("Error checking/creating bucket:", error);
  }
})();
